/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&sk {
    quick-release;
};

/ {
        behaviors {
            //
            // Activate/deactivate lower layer on double tap lower layer key
            //
            td0: tap_dance_0 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                label = "TAP_DANCE_0";
                tapping-term-ms = <180>;
                bindings = <&mo 1>, <&tog 1>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ---------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKSP  |
// |  ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '    |
// | LSHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | RCTRL |
//                     | CMD | LWR | RET |   | SPC | RSE | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T     &kp Y     &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC   &kp A &kp S &kp D &kp F &kp G     &kp H     &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &sk LSHFT &kp Z &kp X &kp C &kp V &kp B     &kp N     &kp M  &kp COMMA &kp DOT &kp FSLH &sk RCTRL
                   &kp LGUI    &td0  &kp RET   &kp SPACE &mo 2  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |    |  1    |  2    |  3   |  4  |  5    |   |  6   |  7   |  8   |  9    |  0    |    |
// |    | BT1   | BT2   | BT3  |     |       |   | LFT  | DWN  |  UP  | RGT   | MUTE  |    |
// |    | BRIUP | BRIDN | ALLW |     | BTCLR |   | PREV | PLAY | NEXT | VOLDN | VOLUP |    |
//                      |      |     |       |   |      |      |      |
                        bindings = <
   &trans &kp N1       &kp N2       &kp N3                            &kp N4 &kp N5       &kp N6         &kp N7           &kp N8     &kp N9            &kp N0          &trans
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2                      &trans &trans       &kp LEFT       &kp DOWN         &kp UP     &kp RIGHT         &kp K_MUTE      &trans
   &trans &kp F14      &kp F15      &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS &trans &bt BT_CLR   &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT &kp C_VOLUME_DOWN &kp C_VOLUME_UP &trans
                                    &trans                            &trans &trans       &trans         &trans           &trans
                        >;
                };

                raise_layer {
// ----------------------------------------------------------------------------------
// | LS(TAB)  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |     |
// |          |  `  |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  | "|" |
// | CAPSLOCK |  ~  |     |     |     |     |   |  _  |  +  |  {  |  }  |     |     |
//                        |     |     |     |   |     |     |     |
                        bindings = <
   &kp LS(TAB)  &kp EXCL  &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans       &kp GRAVE &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp PIPE
   &kp CAPSLOCK &kp TILDE &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &trans   &trans
                                 &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };
        };
};
